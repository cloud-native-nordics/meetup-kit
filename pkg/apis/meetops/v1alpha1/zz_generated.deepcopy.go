// +build !ignore_autogenerated

// Code generated by deepcopy-gen. DO NOT EDIT.

package v1alpha1

import (
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Company) DeepCopyInto(out *Company) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Company.
func (in *Company) DeepCopy() *Company {
	if in == nil {
		return nil
	}
	out := new(Company)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Company) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CompanyRef) DeepCopyInto(out *CompanyRef) {
	*out = *in
	if in.Ref != nil {
		in, out := &in.Ref, &out.Ref
		*out = new(Company)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CompanyRef.
func (in *CompanyRef) DeepCopy() *CompanyRef {
	if in == nil {
		return nil
	}
	out := new(CompanyRef)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Meetup) DeepCopyInto(out *Meetup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Meetup.
func (in *Meetup) DeepCopy() *Meetup {
	if in == nil {
		return nil
	}
	out := new(Meetup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Meetup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MeetupGroup) DeepCopyInto(out *MeetupGroup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MeetupGroup.
func (in *MeetupGroup) DeepCopy() *MeetupGroup {
	if in == nil {
		return nil
	}
	out := new(MeetupGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MeetupGroup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MeetupGroupSpec) DeepCopyInto(out *MeetupGroupSpec) {
	*out = *in
	if in.Organizers != nil {
		in, out := &in.Organizers, &out.Organizers
		*out = make([]SpeakerRef, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IgnoreMeetupDates != nil {
		in, out := &in.IgnoreMeetupDates, &out.IgnoreMeetupDates
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.EcosystemMembers != nil {
		in, out := &in.EcosystemMembers, &out.EcosystemMembers
		*out = make([]CompanyRef, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Meetups != nil {
		in, out := &in.Meetups, &out.Meetups
		*out = make(map[string]Meetup, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MeetupGroupSpec.
func (in *MeetupGroupSpec) DeepCopy() *MeetupGroupSpec {
	if in == nil {
		return nil
	}
	out := new(MeetupGroupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MeetupGroupStatus) DeepCopyInto(out *MeetupGroupStatus) {
	*out = *in
	if in.SponsorTiers != nil {
		in, out := &in.SponsorTiers, &out.SponsorTiers
		*out = make(map[CompanyID]SponsorTier, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MeetupGroupStatus.
func (in *MeetupGroupStatus) DeepCopy() *MeetupGroupStatus {
	if in == nil {
		return nil
	}
	out := new(MeetupGroupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MeetupSpec) DeepCopyInto(out *MeetupSpec) {
	*out = *in
	if in.Sponsors != nil {
		in, out := &in.Sponsors, &out.Sponsors
		*out = make([]MeetupSponsor, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Presentations != nil {
		in, out := &in.Presentations, &out.Presentations
		*out = make([]Presentation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MeetupSpec.
func (in *MeetupSpec) DeepCopy() *MeetupSpec {
	if in == nil {
		return nil
	}
	out := new(MeetupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MeetupSponsor) DeepCopyInto(out *MeetupSponsor) {
	*out = *in
	in.Company.DeepCopyInto(&out.Company)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MeetupSponsor.
func (in *MeetupSponsor) DeepCopy() *MeetupSponsor {
	if in == nil {
		return nil
	}
	out := new(MeetupSponsor)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MeetupStatus) DeepCopyInto(out *MeetupStatus) {
	*out = *in
	in.Date.DeepCopyInto(&out.Date)
	out.Duration = in.Duration
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MeetupStatus.
func (in *MeetupStatus) DeepCopy() *MeetupStatus {
	if in == nil {
		return nil
	}
	out := new(MeetupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Presentation) DeepCopyInto(out *Presentation) {
	*out = *in
	out.Duration = in.Duration
	if in.Delay != nil {
		in, out := &in.Delay, &out.Delay
		*out = new(v1.Duration)
		**out = **in
	}
	if in.Speakers != nil {
		in, out := &in.Speakers, &out.Speakers
		*out = make([]SpeakerRef, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Presentation.
func (in *Presentation) DeepCopy() *Presentation {
	if in == nil {
		return nil
	}
	out := new(Presentation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Speaker) DeepCopyInto(out *Speaker) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Company.DeepCopyInto(&out.Company)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Speaker.
func (in *Speaker) DeepCopy() *Speaker {
	if in == nil {
		return nil
	}
	out := new(Speaker)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Speaker) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpeakerRef) DeepCopyInto(out *SpeakerRef) {
	*out = *in
	if in.Ref != nil {
		in, out := &in.Ref, &out.Ref
		*out = new(Speaker)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpeakerRef.
func (in *SpeakerRef) DeepCopy() *SpeakerRef {
	if in == nil {
		return nil
	}
	out := new(SpeakerRef)
	in.DeepCopyInto(out)
	return out
}
